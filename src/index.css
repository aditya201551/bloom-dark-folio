
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Space+Mono:wght@400;700&family=VT323&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 240 10% 7%;
    --foreground: 0 0% 95%;
    --card: 240 10% 10%;
    --card-foreground: 0 0% 95%;
    --popover: 240 10% 10%;
    --popover-foreground: 0 0% 95%;
    --primary: 15 100% 67%;
    --primary-foreground: 240 10% 7%;
    --secondary: 240 5% 15%;
    --secondary-foreground: 0 0% 95%;
    --muted: 240 5% 15%;
    --muted-foreground: 240 5% 65%;
    --accent: 40 100% 67%;
    --accent-foreground: 240 10% 7%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 95%;
    --border: 240 5% 20%;
    --input: 240 5% 20%;
    --ring: 240 5% 65%;
    --radius: 0.125rem;
  }
}

@layer base {
  * {
    @apply border-border selection:bg-retro-orange/30 selection:text-white;
  }
  
  body {
    @apply bg-retro-bg text-retro-text antialiased bg-noise bg-fixed;
    font-feature-settings: "ss01", "ss02", "cv01", "cv02", "cv03";
  }

  html {
    @apply scroll-smooth;
  }

  h1, h2, h3 {
    @apply font-display tracking-wider;
  }

  p, span, a, li {
    @apply font-sans;
  }

  code, pre {
    @apply font-mono;
  }

  /* Custom cursor */
  body {
    cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'><rect width='8' height='8' x='0' y='0' fill='%23FF7657' /><rect width='8' height='8' x='8' y='8' fill='%23FF7657' /></svg>"), auto;
  }
  
  a, button, [role="button"], input, select, textarea, label, summary {
    cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'><rect width='12' height='12' x='2' y='2' fill='%23FF7657' /></svg>"), auto;
  }
}

@layer utilities {
  .delay-100 {
    animation-delay: 100ms;
  }
  .delay-200 {
    animation-delay: 200ms;
  }
  .delay-300 {
    animation-delay: 300ms;
  }
  .delay-400 {
    animation-delay: 400ms;
  }
  .delay-500 {
    animation-delay: 500ms;
  }
  .delay-600 {
    animation-delay: 600ms;
  }

  .retro-card {
    @apply bg-retro-card border border-white/5 shadow-md rounded-sm hover:shadow-lg transition-all duration-300;
  }
  
  .retro-container {
    @apply relative overflow-hidden z-0;
  }

  .retro-container::before {
    content: '';
    @apply absolute inset-0 bg-retro-grid opacity-20 z-[-1] pointer-events-none;
    background-size: 30px 30px;
  }
  
  .retro-text-shadow {
    text-shadow: 2px 2px 0px rgba(0,0,0,0.2);
  }
  
  .glass-card {
    @apply backdrop-blur-sm bg-white/5 border border-white/10 shadow-lg;
  }
  
  .text-gradient {
    @apply bg-gradient-to-r from-retro-orange via-retro-yellow to-retro-purple bg-clip-text text-transparent;
  }
  
  .link-underline {
    @apply relative after:absolute after:bottom-0 after:left-0 after:bg-retro-orange 
           after:h-[2px] after:w-0 after:transition-all after:duration-300 
           hover:after:w-full cursor-pointer;
  }
  
  .skill-bar {
    @apply relative h-2 rounded-none bg-retro-card overflow-hidden border border-white/10;
  }

  .animate-on-scroll {
    opacity: 0;
  }
  
  .animate-on-scroll.animate-fade-in {
    animation: fade-in 0.5s ease-out forwards;
  }
  
  .animate-on-scroll.animate-scale-in {
    animation: scale-in 0.3s ease-out forwards;
  }

  /* Retro cursor effect */
  .retro-cursor::after {
    content: '|';
    @apply text-retro-orange animate-blink;
  }

  .pixel-shadow {
    box-shadow: 5px 5px 0px rgb(0 0 0 / 15%);
  }

  .retro-separator {
    @apply h-px w-full bg-white/10 my-6;
    background-image: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.1), transparent);
  }

  /* Shimmer effect */
  .shimmer {
    @apply animate-shimmer bg-gradient-to-r from-transparent via-white/10 to-transparent bg-[length:200%_100%];
  }

  .scanlines {
    position: relative;
    overflow: hidden;
  }
  .scanlines:before {
    content: '';
    @apply absolute inset-0 bg-[linear-gradient(to_bottom,transparent,transparent_50%,rgba(0,0,0,0.05)_50%,transparent_51%,transparent_100%)];
    background-size: 100% 4px;
    z-index: 9999;
    pointer-events: none;
    mix-blend-mode: overlay;
  }

  /* Terminal text effect */
  .terminal-text {
    @apply font-mono text-retro-green overflow-hidden whitespace-nowrap border-r-2 border-retro-green;
    animation: typing 3.5s steps(40, end), blink 0.75s step-end infinite;
  }
  
  /* New Animation Classes */
  .animate-bounce-slow {
    animation: bounce 2s infinite;
  }
  
  .animate-pulse-subtle {
    animation: pulse-subtle 2s infinite;
  }
  
  .animate-pixel-reveal {
    animation: pixel-reveal 1s forwards;
  }
  
  .bg-scanline {
    background: repeating-linear-gradient(
      to bottom,
      transparent,
      transparent 1px,
      rgba(0, 0, 0, 0.05) 1px,
      rgba(0, 0, 0, 0.05) 2px
    );
    background-size: 100% 4px;
    animation: scanline-scroll 8s linear infinite;
  }
  
  .glitch-effect {
    animation: glitch 0.5s cubic-bezier(.25, .46, .45, .94) both;
  }
  
  .typewriter-text {
    overflow: hidden;
    border-right: .15em solid #FF7657;
    white-space: nowrap;
    letter-spacing: .1em;
    animation: typing 3.5s steps(40, end), blink-caret .75s step-end infinite;
  }
}

/* Keyframe Animations */
@keyframes scanline-scroll {
  0% { background-position: 0 0; }
  100% { background-position: 0 100%; }
}

@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

@keyframes pulse-subtle {
  0% { opacity: 1; }
  50% { opacity: 0.8; }
  100% { opacity: 1; }
}

@keyframes pixel-reveal {
  0% {
    filter: blur(10px) brightness(0.8);
    transform: scale(1.05);
  }
  30% {
    filter: blur(5px) brightness(0.9);
  }
  100% {
    filter: blur(0) brightness(1);
    transform: scale(1);
  }
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: #FF7657 }
}
